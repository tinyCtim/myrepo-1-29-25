
This program serves as an introduction to key elements in most tiny-c
programs.

The #include lines are needed to make certain functions used by the
program known.

The various ways to comment in tiny-c are illustrated (/* and [ ]).

tiny-c programs are a sequence of function definitions. Here we have
only one function definition, test. It takes no arguments.

There is only one variable, i. Semicolons may be used to have multiple
statements on one line. Variables must be declared (i is an integer
variable). Unless initialized with an assignment statement, variables
are initialized to 0 (or null if it's a character variable.)

How to launch this program is shown. You need to use the -r option (run)
because there is no main function, the default.

All standard flow control statements (if, else, while) are illustrated.
Notice the use of parentheses to specify the condition. tiny-c is less
strict than C on parentheses. In most cases they are not needed in if
and while statements.

The pn (print number) function (which is one of the many functions in
pps/library.tc) is used. printf could have been used but no formatting
is needed so the simpler function is used. Notice the use of %c in the
lines that do use printf (\n, newline, is not supported). Notice
parentheses are not used in the printf statements (but could have been).

The help function is the only function that is not in the standard
function library library.tc. This is why pps/lrblib.tc is needed.

Notice the use of brackets ([ and ]) in function definitions and the
while statement. C uses braces ( { and } ).
